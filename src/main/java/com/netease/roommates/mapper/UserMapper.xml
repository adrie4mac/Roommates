<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.netease.roommates.mapper.UserMapper">
	<resultMap id="userMap" type="user">
		<id column="userId" property="userId"/>
		<association property="personality" column="userId" select="getUserPersonality" />
	</resultMap>

	<insert id="insertUser" useGeneratedKeys="true" keyProperty="userId"
		parameterType="user">
		insert into sys_user(userName, pwdMD5Hash, nickName,
		gender, companyEmail, phoneNumber,
		birthday, address, updateTime,
		company, position)
		values(#{userName},
		#{pwdMD5Hash}, #{nickName},
		#{gender}, #{companyEmail},
		#{phoneNumber},
		#{birthday}, #{address},
		now(), #{company}, #{position})
	</insert>

	<select id="getUserById" parameterType="int" resultMap="userMap">
		select *
		from sys_user where userId=#{id}
	</select>

	<update id="updateUserBasicInfo" parameterType="user">
		update sys_user
		<set>
			<if test="nickName != null">
				nickName = #{nickName, jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender, jdbcType=BIT},
			</if>
			<if test="position != null">
				position = #{position, jdbcType=VARCHAR},
			</if>
			<if test="pwdMD5Hash != null">
				pwdMD5Hash = #{pwdMD5Hash, jdbcType=VARCHAR},
			</if>
			<if test="phoneNumber != null">
				phoneNumber = #{phoneNumber, jdbcType=VARCHAR},
			</if>
			<if test="companyEmail != null">
				companyEmail = #{companyEmail, jdbcType=VARCHAR},
			</if>
			<if test="company != null">
				company = #{company, jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address, jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday, jdbcType=DATE},
			</if>
			<if test="status != null">
				status = #{status, jdbcType=BIT},
			</if>
			updateTime = now()
		</set>
		where userId=#{userId}
	</update>

	<select id="getUserPersonality" parameterType="int" resultType="personality">
		select * from user_personality where userId=#{id}
	</select>

	<insert id="insertUserPersonality" parameterType="personality">
		insert into
		user_personality(userId, smoking, pet, dailySchedule, visitor,
		constellation,
		cleanliness, personCharacter, hasHouse)
		values(#{userId}, #{smoking}, #{pet},
		#{dailySchedule}, #{visitor},
		#{constellation},
		#{cleanliness}, #{personCharacter}, #{hasHouse} )
	</insert>

	<update id="updateUserPersonality" parameterType="personality">
		update user_personality
		<set>
			<if test="hasHouse != 0" >
				hasHouse = #{hasHouse, jdbcType=INTEGER},
			</if>
			<if test="smoking != 0" >
				smoking = #{smoking, jdbcType=INTEGER},
			</if>
			<if test="pet != 0">
				pet = #{pet, jdbcType=INTEGER},
			</if>
			<if test="dailySchedule != 0">
				dailySchedule = #{dailySchedule,
				jdbcType=INTEGER},
			</if>
			<if test="visitor != 0">
				visitor = #{visitor, jdbcType=INTEGER},
			</if>
			<if test="constellation != null">
				constellation = #{constellation,
				jdbcType=VARCHAR},
			</if>
			<if test="cleanliness != 0">
				cleanliness = #{cleanliness,
				jdbcType=INTEGER},
			</if>
			<if test="personCharacter != 0">
				personCharacter =
				#{personCharacter, jdbcType=INTEGER},
			</if>
			updateTime = now()
		</set>
		where id=#{id}
	</update>

	<select id="getUserListByAddress" parameterType="String"
		resultType="user">
		select * from sys_user where address=#{address}
	</select>


	<select id="getUserByName" parameterType="String" resultType="user">
		select * from sys_user where nickName=#{name}
	</select>

	<select id="getUserByEmail" parameterType="String" resultType="user">
		select * from sys_user where companyEmail=#{email}
	</select>

	<select id="isInfoAll" parameterType="int" resultType="int">
		select
		count(*) from sys_user where userId=#{userId} and userName!=null and
		phoneNumber!=null
		and birthday!=null and address!=null and
		company!=null and position!=null

	</select>

	<select id="isQuestionnaireAll" parameterType="int" resultType="int">
		select count(*) from user_personality where userId=#{userId} and
		(hasHouse!=1 or smoking!=1
		and pet!=1 or dailySchedule!=1 or visitor!=1
		or cleanliness!=1 or personCharacter!=1)
	</select>
	
	<select id="getUserPersonalityById" parameterType="int" resultType="personality">
		select * from user_personality where userId=#{userId}
	</select>

</mapper>